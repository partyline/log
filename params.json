{
  "name": "Log",
  "tagline": "Notes on server configuration",
  "body": "# Remplacer le RAID 1 par ZFS RAIDZ par sur serveur OVH \"So You Start\"\r\n\r\nCe serveur a trois disques SSD de 120 Go. La FAQ d'OVH indique que dans ce cas les disques sont en RAID 5.\r\n\r\n> Par défaut, si votre serveur dispose de 2 disques SATA (ou SSD) il sera installé avec un RAID 1 (RAID 5 si 3 disques SATA ou SSD). En RAID 1, les disques étant en miroir, vous disposerez de façon effective de la capacité d'un seul des disques.\r\n\r\nQuoi qu'il en soit, FreeBSD est un système de \"Tier 1\" pour le support de ZFS, autant en profiter et utiliser les 3 disques pour une installation \"Root on ZFS\". Cette configuration garantit que le système résiste à la défaillance d'un des disques durs et l'espace disponible est de 120 Go ce qui convient parfaitement pour des projets ne nécessitant pas des terabytes de données.\r\n\r\n## Désactiver le RAID\r\n\r\nPour désactiver le RAID, dans le manager OVH, choisir un template FreeBSD et sélectionner l'option «Installation Personnalisée.»\r\n\r\n![OVH Manager - Screenshot 1](https://raw.githubusercontent.com/partyline/log/gh-pages/img/ovh-1.png)\r\n\r\nCocher ensuite l'option pour «installer le système uniquement sur 1 disque»\r\n\r\n![OVH Manager - Screenshot 2](https://raw.githubusercontent.com/partyline/log/gh-pages/img/ovh-2.png)\r\n\r\n\r\n\r\n## Installer FreeBSD sur un pool zfs de 3 disques\r\n\r\nLa procédure la plus simple est d'utiliser mfsBSD pour installer FreeBSD selon cette configuration.\r\n\r\nmfsBSD est un ensemble de scripts permettant de créer une image bootable de FreeBSD qui est entièrement chargée dans la RAM. C'est un outil précieux grâce auquel on peut par exemple facilement installer un système FreeBSD sur un serveur n'offrant que des distributions Linux (mfsBSD a d'ailleurs été inspiré par un autre projet nommé depenguinator.)\r\n\r\nPour générer une image bootable, le script doit être lancé sur un système FreeBSD, il est possible de booter sur le serveur, puisqu'on y a installé FreeBSD 10, ou bien d'utiliser une machine virtuelle.\r\n\r\nRécupérer l'archive de mfsBSD.\r\n```\r\nfetch http://github.com/mmatuska/mfsbsd/archive/2.2.tar.gz\r\ntar xzvf 2.2.tar.gz\r\n```\r\n\r\nConfigurer mfsBSD\r\n\r\nAu minimum, configurer l'interface réseau en DHCP (le temps de l'installation)\r\n\r\n```\r\ncd mfsbsd-2.2/conf\r\ncp rc.conf.sample rc.conf\r\nvi rc.conf\r\n```\r\n\r\nDécommenter la ligne `ifconfig_rl0=\"DHCP\"` et vérifier le nom de l'interface. Dans mon cas : `ifconfig_em0=\"DHCP\"`\r\n\r\n```\r\ncp loader.conf.sample loader.conf\r\nvi loader.conf\r\n```\r\nChanger le mot de passe root à la ligne `mfsbsd.rootpw=\"foobar\"` dans le fichier `loader.conf`.\r\n\r\n## Rebooter sur le système Rescue\r\n\r\nDans le manager d'OVH.\r\n\r\n![OVH Manager - Screenshot 3](https://raw.githubusercontent.com/partyline/log/gh-pages/img/ovh-3.png\r\n\r\n\r\n\r\n\r\n### So You Start\r\nUne gamme intermédiaire de serveurs dédiés chez OVH à des tarifs intéressants.[e3-ssd-2](https://www.soyoustart.com/en/offers/e3-ssd-2.xml)\r\n\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}